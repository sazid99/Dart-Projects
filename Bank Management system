import 'dart:io';

class BankManager {
  String password = "manager123";

  // List of accounts for the manager to manage
  List<Account> accounts;

  BankManager(this.accounts);

  // Manager login
  void managerIdLogIn() {
    while (true) {
      print("Enter your manager password ->");
      String? inputUserPass = stdin.readLineSync();
      if (inputUserPass == password) {
        print("Congratulations, Right password");
        menu();
        break;
      } else {
        print("Incorrect password! Try again.");
      }
    }
  }

  // Manager menu
  void menu() {
    while (true) {
      print("\n1. Show all accounts \n2. Log out");
      String? strInputMenuNumber = stdin.readLineSync();
      try {
        int inputMenuNumber = int.parse(strInputMenuNumber!);
        switch (inputMenuNumber) {
          case 1:
            showAccountDetails();
            break;
          case 2:
            print("Logging out....");
            return; // Exit the menu
          default:
            print("Enter a valid option (1 or 2).");
        }
      } catch (e) {
        print("Invalid input. Please enter a number.");
      }
    }
  }

  // Show account details for all accounts
  void showAccountDetails() {
    if (accounts.isEmpty) {
      print("No accounts to display.");
      return;
    }

    for (int i = 0; i < accounts.length; i++) {
      print("${i + 1}. Account ${accounts[i].accountNumber}");
    }

    print("\nSelect an account to view details or enter 0 to go back:");
    String? strInputAccNumber = stdin.readLineSync();
    try {
      int inputAccNumber = int.parse(strInputAccNumber!);
      if (inputAccNumber == 0) return;
      if (inputAccNumber > 0 && inputAccNumber <= accounts.length) {
        Account selectedAccount = accounts[inputAccNumber - 1];
        selectedAccount.displayAccountDetails();
      } else {
        print("Invalid account number.");
      }
    } catch (e) {
      print("Invalid input. Please enter a number.");
    }
  }
}

class Account {
  int accountNumber;
  double balance;
  String password;
  String? inputUserPass;

  Account(this.accountNumber, this.balance, this.password);

  // User or manager entry point
  void userOrManager(BankManager bankManager) {
    while (true) {
      print("\nWelcome to Lapata Bank!");
      print("1. Login as User \n2. Login as Manager \n3. Exit");
      print("Enter your choice ->");

      String? strInputUserOrManager = stdin.readLineSync();
      try {
        int intInputUserOrManager = int.parse(strInputUserOrManager!);
        switch (intInputUserOrManager) {
          case 1:
            userLogIn();
            break;
          case 2:
            bankManager.managerIdLogIn();
            break;
          case 3:
            print("Exiting....");
            return; // Exit the method
          default:
            print("Enter a valid choice (1, 2, or 3).");
        }
      } catch (e) {
        print("Invalid input. Please enter a number.");
      }
    }
  }

  // User login
  void userLogIn() {
    while (true) {
      print("Enter your user password ->");
      String? inputUserPass = stdin.readLineSync();
      if (inputUserPass == password) {
        print("Congratulations, Right password");
        showAccountDetails();
        break;
      } else {
        print("Incorrect password! Try again.");
      }
    }
  }

  // Display account details
  void displayAccountDetails() {
    print("\nAccount Number: $accountNumber");
    print("Account Balance: $balance Taka");
  }

  // Show account menu
  void showAccountDetails() {
    while (true) {
      print("Current balance $balance Taka");
      print("1. Deposit \n2. Withdraw \n3. Logout");
      print("Enter your choice ->");

      String? strDepositWithdrawChoice = stdin.readLineSync();
      try {
        int intDepositWithdrawChoice = int.parse(strDepositWithdrawChoice!);
        switch (intDepositWithdrawChoice) {
          case 1:
            deposit();
            break;
          case 2:
            withdraw();
            break;
          case 3:
            print("Logging out....");
            return; // Exit the method
          default:
            print("Enter a valid choice (1, 2, or 3).");
        }
      } catch (e) {
        print("Invalid input. Please enter a number.");
      }
    }
  }

  // Deposit amount
  void deposit() {
    print("Enter deposit amount ->");
    String? strDepositAmount = stdin.readLineSync();
    try {
      double depositAmount = double.parse(strDepositAmount!);
      if (depositAmount > 0) {
        balance += depositAmount;
        print("Deposit successful. Current balance: $balance Taka");
      } else {
        print("Enter a valid positive amount.");
      }
    } catch (e) {
      print("Invalid input. Please enter a number.");
    }
  }

  // Withdraw amount
  void withdraw() {
    print("Enter withdraw amount ->");
    String? strWithdrawAmount = stdin.readLineSync();
    try {
      double withdrawAmount = double.parse(strWithdrawAmount!);
      if (withdrawAmount > 0 && withdrawAmount <= balance) {
        balance -= withdrawAmount;
        print("Withdrawal successful. Current balance: $balance Taka");
      } else if (withdrawAmount > balance) {
        print("Insufficient balance.");
      } else {
        print("Enter a valid positive amount.");
      }
    } catch (e) {
      print("Invalid input. Please enter a number.");
    }
  }
}

void main() {
  // Initialize accounts
  List<Account> accounts = [
    Account(101, 5000.0, "user101"),
    Account(102, 10000.0, "user102"),
    Account(103, 7500.0, "user103"),
    Account(104, 8540.0, "user104"),
  ];

  // Initialize BankManager
  BankManager bankManager = BankManager(accounts);

  // Start the program
  accounts[0].userOrManager(bankManager);
}
